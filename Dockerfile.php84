# Custom Shopware 6 with PHP 8.4 support
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PHP_VERSION=8.4
ENV SHOPWARE_VERSION=6.7.0.1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    software-properties-common \
    ca-certificates \
    lsb-release \
    wget \
    curl \
    git \
    unzip \
    supervisor \
    mysql-client \
    openssh-server \
    && rm -rf /var/lib/apt/lists/*

# Add Ondrej's PHP repository for PHP 8.4
RUN add-apt-repository ppa:ondrej/php -y && apt-get update

# Install PHP 8.4 and required extensions
RUN apt-get install -y \
    php8.4 \
    php8.4-fpm \
    php8.4-cli \
    php8.4-common \
    php8.4-mysql \
    php8.4-zip \
    php8.4-gd \
    php8.4-mbstring \
    php8.4-curl \
    php8.4-xml \
    php8.4-bcmath \
    php8.4-intl \
    php8.4-opcache \
    php8.4-readline \
    php8.4-soap \
    php8.4-xsl \
    php8.4-dev \
    php8.4-pgsql \
    php8.4-sqlite3 \
    php8.4-redis \
    php8.4-memcached \
    php8.4-imagick \
    php8.4-xdebug \
    && rm -rf /var/lib/apt/lists/*

# Install Apache
RUN apt-get update && apt-get install -y apache2 libapache2-mod-php8.4 \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install Node.js and npm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# Configure PHP
RUN echo "memory_limit = 2G" >> /etc/php/8.4/apache2/php.ini \
    && echo "memory_limit = 2G" >> /etc/php/8.4/cli/php.ini \
    && echo "max_execution_time = 300" >> /etc/php/8.4/apache2/php.ini \
    && echo "max_execution_time = 300" >> /etc/php/8.4/cli/php.ini \
    && echo "upload_max_filesize = 100M" >> /etc/php/8.4/apache2/php.ini \
    && echo "post_max_size = 100M" >> /etc/php/8.4/apache2/php.ini

# Configure Apache
RUN a2enmod rewrite \
    && a2enmod headers \
    && a2enmod ssl

# Create document root
RUN mkdir -p /var/www/html

# Set working directory
WORKDIR /var/www/html

# Configure Apache virtual host
RUN echo '<VirtualHost *:80>' > /etc/apache2/sites-available/000-default.conf \
    && echo '    ServerName localhost' >> /etc/apache2/sites-available/000-default.conf \
    && echo '    DocumentRoot /var/www/html/public' >> /etc/apache2/sites-available/000-default.conf \
    && echo '    <Directory /var/www/html/public>' >> /etc/apache2/sites-available/000-default.conf \
    && echo '        Options -Indexes +FollowSymLinks' >> /etc/apache2/sites-available/000-default.conf \
    && echo '        AllowOverride All' >> /etc/apache2/sites-available/000-default.conf \
    && echo '        Require all granted' >> /etc/apache2/sites-available/000-default.conf \
    && echo '    </Directory>' >> /etc/apache2/sites-available/000-default.conf \
    && echo '    ErrorLog ${APACHE_LOG_DIR}/error.log' >> /etc/apache2/sites-available/000-default.conf \
    && echo '    CustomLog ${APACHE_LOG_DIR}/access.log combined' >> /etc/apache2/sites-available/000-default.conf \
    && echo '</VirtualHost>' >> /etc/apache2/sites-available/000-default.conf

# Install Shopware 6
RUN composer create-project shopware/production:${SHOPWARE_VERSION} /tmp/shopware \
    && cp -r /tmp/shopware/* /var/www/html/ \
    && rm -rf /tmp/shopware

# Set proper permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html

# Create startup script
RUN echo '#!/bin/bash' > /start.sh \
    && echo 'service apache2 start' >> /start.sh \
    && echo 'service php8.4-fpm start' >> /start.sh \
    && echo 'tail -f /var/log/apache2/access.log' >> /start.sh \
    && chmod +x /start.sh

# Expose port
EXPOSE 80

# Start services
CMD ["/start.sh"]